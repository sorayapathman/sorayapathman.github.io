{"ast":null,"code":"var _jsxFileName = \"/Users/sorayapathman/Documents/GitHub/sorayapathman.github.io/src/components/Firebase/Auth.js\",\n    _s = $RefreshSig$();\n\n// https://github.com/nikaocreatives/react-firebase-auth-email-link/blob/master/src/Auth.js\nimport React, { useEffect, useState } from \"react\";\nimport firebaseApp from \"./firebase\";\nimport { getDatabase, ref, child, get } from \"firebase/database\";\nimport { getAuth, isSignInWithEmailLink, signInWithEmailLink } from \"firebase/auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/React.createContext();\nconst auth = getAuth();\n\nconst fetchUserData = (user, setUserData) => {\n  const dbRef = ref(getDatabase());\n  const userId = user.uid;\n  const path = `users/${userId}`;\n  get(child(dbRef, path)).then(snapshot => {\n    if (snapshot.exists()) {\n      const userData = snapshot.val();\n      setUserData(userData);\n    } else {\n      console.log(\"No data available for this person!!\");\n    }\n  }).catch(error => {\n    console.error(error);\n  });\n};\n\nexport const AuthProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [currentUser, setCurrentUser] = useState(null);\n  const [userData, setUserData] = useState(null);\n  useEffect(() => {\n    getAuth().onAuthStateChanged(function (theUser) {\n      if (theUser) {\n        // User is signed in.\n        setCurrentUser(theUser);\n        fetchUserData(theUser, setUserData);\n      } else {\n        // User is not signed in.\n        setCurrentUser(null);\n      }\n    });\n  }, []);\n\n  const fetchTheUserData = user => {\n    return fetchUserData(user, setUserData);\n  };\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      currentUser,\n      userData,\n      fetchUserData: fetchTheUserData\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthProvider, \"SIdi9JYVrX4q658hn6gpByug9Fg=\");\n\n_c = AuthProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["/Users/sorayapathman/Documents/GitHub/sorayapathman.github.io/src/components/Firebase/Auth.js"],"names":["React","useEffect","useState","firebaseApp","getDatabase","ref","child","get","getAuth","isSignInWithEmailLink","signInWithEmailLink","AuthContext","createContext","auth","fetchUserData","user","setUserData","dbRef","userId","uid","path","then","snapshot","exists","userData","val","console","log","catch","error","AuthProvider","children","currentUser","setCurrentUser","onAuthStateChanged","theUser","fetchTheUserData"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,WAAP,MAAwB,YAAxB;AACA,SAASC,WAAT,EAAsBC,GAAtB,EAA2BC,KAA3B,EAAkCC,GAAlC,QAA6C,mBAA7C;AACA,SAASC,OAAT,EAAkBC,qBAAlB,EAAyCC,mBAAzC,QAAoE,eAApE;;AAEA,OAAO,MAAMC,WAAW,gBAAGX,KAAK,CAACY,aAAN,EAApB;AAEP,MAAMC,IAAI,GAAGL,OAAO,EAApB;;AAEA,MAAMM,aAAa,GAAG,CAACC,IAAD,EAAMC,WAAN,KAAsB;AAC1C,QAAMC,KAAK,GAAGZ,GAAG,CAACD,WAAW,EAAZ,CAAjB;AAEA,QAAMc,MAAM,GAAGH,IAAI,CAACI,GAApB;AACA,QAAMC,IAAI,GAAI,SAAQF,MAAO,EAA7B;AAEAX,EAAAA,GAAG,CAACD,KAAK,CAACW,KAAD,EAAQG,IAAR,CAAN,CAAH,CAAwBC,IAAxB,CAA8BC,QAAD,IAAc;AACzC,QAAIA,QAAQ,CAACC,MAAT,EAAJ,EAAuB;AACrB,YAAMC,QAAQ,GAAGF,QAAQ,CAACG,GAAT,EAAjB;AAEAT,MAAAA,WAAW,CAACQ,QAAD,CAAX;AACD,KAJD,MAIO;AACLE,MAAAA,OAAO,CAACC,GAAR,CAAY,qCAAZ;AACD;AACF,GARD,EAQGC,KARH,CAQUC,KAAD,IAAW;AAClBH,IAAAA,OAAO,CAACG,KAAR,CAAcA,KAAd;AACD,GAVD;AAWD,CAjBD;;AAoBA,OAAO,MAAMC,YAAY,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AAC5C,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgC/B,QAAQ,CAAC,IAAD,CAA9C;AACA,QAAM,CAACsB,QAAD,EAAWR,WAAX,IAA0Bd,QAAQ,CAAC,IAAD,CAAxC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,OAAO,GAAG0B,kBAAV,CAA6B,UAASC,OAAT,EAAkB;AAC7C,UAAIA,OAAJ,EAAa;AACX;AACAF,QAAAA,cAAc,CAACE,OAAD,CAAd;AACArB,QAAAA,aAAa,CAACqB,OAAD,EAAUnB,WAAV,CAAb;AACD,OAJD,MAIO;AACL;AACAiB,QAAAA,cAAc,CAAC,IAAD,CAAd;AACD;AACF,KATD;AAUD,GAXQ,EAWN,EAXM,CAAT;;AAaA,QAAMG,gBAAgB,GAAIrB,IAAD,IAAU;AACjC,WAAOD,aAAa,CAACC,IAAD,EAAOC,WAAP,CAApB;AACD,GAFD;;AAIA,sBACE,QAAC,WAAD,CAAa,QAAb;AACE,IAAA,KAAK,EAAE;AACLgB,MAAAA,WADK;AAELR,MAAAA,QAFK;AAGLV,MAAAA,aAAa,EAAEsB;AAHV,KADT;AAAA,cAOGL;AAPH;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAhCM;;GAAMD,Y;;KAAAA,Y","sourcesContent":["// https://github.com/nikaocreatives/react-firebase-auth-email-link/blob/master/src/Auth.js\nimport React, { useEffect, useState } from \"react\";\nimport firebaseApp from \"./firebase\";\nimport { getDatabase, ref, child, get } from \"firebase/database\";\nimport { getAuth, isSignInWithEmailLink, signInWithEmailLink } from \"firebase/auth\";\n\nexport const AuthContext = React.createContext();\n\nconst auth = getAuth();\n\nconst fetchUserData = (user,setUserData) => {\n  const dbRef = ref(getDatabase());\n\n  const userId = user.uid\n  const path = `users/${userId}`;\n\n  get(child(dbRef, path)).then((snapshot) => {\n    if (snapshot.exists()) {\n      const userData = snapshot.val();\n\n      setUserData(userData)\n    } else {\n      console.log(\"No data available for this person!!\");\n    }\n  }).catch((error) => {\n    console.error(error);\n  });\n}\n\n\nexport const AuthProvider = ({ children }) => {\n  const [currentUser, setCurrentUser] = useState(null);\n  const [userData, setUserData] = useState(null);\n\n  useEffect(() => {\n    getAuth().onAuthStateChanged(function(theUser) {\n      if (theUser) {\n        // User is signed in.\n        setCurrentUser(theUser)\n        fetchUserData(theUser, setUserData)\n      } else {\n        // User is not signed in.\n        setCurrentUser(null)\n      }\n    });\n  }, []);\n\n  const fetchTheUserData = (user) => {\n    return fetchUserData(user, setUserData)\n  }\n\n  return (\n    <AuthContext.Provider\n      value={{\n        currentUser,\n        userData,\n        fetchUserData: fetchTheUserData\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};"]},"metadata":{},"sourceType":"module"}